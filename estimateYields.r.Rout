
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(RMySQL)
Loading required package: DBI
> library(EGRET)
> library(lubridate)

Attaching package: ‘lubridate’

The following object is masked from ‘package:base’:

    date

> all_cons <- dbListConnections(MySQL())
> for(con in all_cons)
+ 	dbDisconnect(con)
> 
> debugPrint<-FALSE
> info<-FALSE
> limit = ";"
> 
> mydb = dbConnect(MySQL(), user='jch223', password='temp1234', dbname='bond2', host='localhost')
> 
> query <- paste("select * from testDateDataForPricing ", limit, sep="")
> 
> data <- dbGetQuery(mydb, query)
> 
> #data$spreadAboveTreasury <- data$Yield-as.numeric(data$treasuryYield)
> #taking xintq divided by EBITDA and EBIT
> yindices<-which(data$CALLABLE=="Y")
> nindices<-which(data$CALLABLE=="N")
> if(info)
+ {
+ print(paste("number of yindices:", length(yindices), "number of nindices:", length(nindices)))
+ }
> data$CALLABLE[yindices]=1
> data$CALLABLE[nindices]=0
> 
> if(info)
+ {
+ print(paste("Number of indices where no callable", length(which(data$CALLABLE==0))))
+ }
> callableAndAbovePar<-which(data$CALLABLE==1 & data$Clean_Price>=100)
> notCallableAndAbovePar<-which(!(data$CALLABLE==1 & data$Clean_Price>=100))
> 
> data$PAR=data$ISSUER_CUSIP
> #setting this value to one if it is callable and trading above 100 (those indices gathered 3 lines above), if not 0
> data$PAR[callableAndAbovePar]=1
> data$PAR[notCallableAndAbovePar]=0
> #getting rid of all instances where there is no reported niq
> data$niq=as.numeric(data$niq)
> data$dpq=as.numeric(data$dpq)
> data$xintq=as.numeric(data$xintq)
> #calculating netInterestIncome Over EBITDA and EBIT
> data$NetInterestOverEBITDA= data$xintq/(data$niq+data$dpq)
> data$NetInterestOverNiq=data$xintq/(data$niq)
> 
> names(data)[which(names(data)=="NetInterestOverNiq")]="NetInterestOverEBIT"
> 
> data$timeToMaturity=as.numeric(data$timeToMaturity)
> 
> 
> if(info)
+ {
+ print(paste("Number of indices where no callable", length(which(data$CALLABLE==0))))
+ print(head(data[which(data$CALLABLE==0),],n=20))
+ }
> data<-data[,c("Clean_Price","PAR","yyyymmdd","CALLABLE","spreadAboveTreasury","timeToMaturity","NetInterestOverEBIT","NetInterestOverEBITDA","ISSUER_CUSIP","ISSUE_CUSIP","treasuryYield","whichTreasury","MATURITY","SIC_CODE","Yield")]
> data<-data[complete.cases(data),]
> if(info)
+ {
+ print(head(data[,c("PAR", "CALLABLE","timeToMaturity", "NetInterestOverEBIT", "NetInterestOverEBITDA")], n=20))
+ print(paste("Number of indices where no callable", length(which(data$CALLABLE==0))))
+ }
> #calculating the average spreadAboveTreasuryForEachSicCode
> sicCodeAverages<- aggregate(data[, c("spreadAboveTreasury")], list(data$SIC_CODE),mean)
> if(info)
+ {
+ print(sicCodeAverages)
+ }
> #seperating set into bonds that have same bond traded in previous 30 days and those that didn't
> 
> earliestTradeOfBondOfCertainCusip<-aggregate(data[,c("yyyymmdd")],list(data$ISSUER_CUSIP), min)
> names(earliestTradeOfBondOfCertainCusip)=c("ISSUER_CUSIP", "minTradeDateForCusip")
> data <- merge(data, earliestTradeOfBondOfCertainCusip, by=c("ISSUER_CUSIP"))
> indicesWithBondTradedOfSameCusip <- which(data$yyyymmdd>data$minTradeDateForCusip)
> notIndices <- which(!(data$yyyymmdd>data$minTradeDateForCusip))
> data$group= numeric(length=length(data$ISSUER_CUSIP))
> data$group[notIndices]=1
> data$group[indicesWithBondTradedOfSameCusip]=0
> 
> #-----------------------------------------------------------------------------#
> #adding residuals to data 
> 
> data$residuals=NA
> 
> 
> #regression for bonds that do not have bond of same cusip traded in 30 day period
> coefficients <- lm(spreadAboveTreasury ~ NetInterestOverEBITDA + NetInterestOverEBIT + timeToMaturity + CALLABLE + PAR , data=data[notIndices,])
> 
> print("coefficients for indices that DO NOT  have same bond traded in 30 day period")
[1] "coefficients for indices that DO NOT  have same bond traded in 30 day period"
> summary(coefficients)

Call:
lm(formula = spreadAboveTreasury ~ NetInterestOverEBITDA + NetInterestOverEBIT + 
    timeToMaturity + CALLABLE + PAR, data = data[notIndices, 
    ])

Residuals:
    Min      1Q  Median      3Q     Max 
-4.6921 -1.2387 -0.3067  0.6695  9.1962 

Coefficients:
                        Estimate Std. Error t value Pr(>|t|)    
(Intercept)            3.138e+00  3.324e-01   9.441  < 2e-16 ***
NetInterestOverEBITDA -4.523e-02  4.406e-02  -1.027 0.306054    
NetInterestOverEBIT    5.660e-02  1.880e-02   3.011 0.003000 ** 
timeToMaturity        -1.526e-04  3.163e-05  -4.824 3.09e-06 ***
CALLABLE1              2.775e+00  4.055e-01   6.844 1.30e-10 ***
PAR1                  -1.941e+00  5.042e-01  -3.849 0.000167 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.251 on 172 degrees of freedom
Multiple R-squared:  0.259,	Adjusted R-squared:  0.2375 
F-statistic: 12.03 on 5 and 172 DF,  p-value: 5.394e-10

> 
> 
> data[notIndices,]$residuals=coefficients$residuals
> 
> print(length(coefficients$residuals))
[1] 178
> print(length(data[notIndices,]$residuals))
[1] 178
> 
> maxIndex= which(data[notIndices,]$residuals==max(coefficients$residuals))
> minIndex= which(data[notIndices,]$residuals==min(coefficients$residuals))
> 
> 
> print(data[notIndices,][maxIndex,])
    ISSUER_CUSIP Clean_Price PAR yyyymmdd CALLABLE spreadAboveTreasury
450       07556Q       79.25   0 20080204        1             14.9252
451       07556Q       79.25   0 20080204        1             14.9252
    timeToMaturity NetInterestOverEBIT NetInterestOverEBITDA ISSUE_CUSIP
450           1196          -0.1821543            -0.1872248          AE
451           1196          -0.1821543            -0.1872248          AE
    treasuryYield whichTreasury MATURITY SIC_CODE   Yield minTradeDateForCusip
450          2.23 3yearMaturity 20110515     1521 17.1552             20080204
451          2.23 3yearMaturity 20110515     1521 17.1552             20080204
    group residuals
450     1  9.196222
451     1  9.196222
> print(data[notIndices,][minIndex,])
     ISSUER_CUSIP Clean_Price PAR yyyymmdd CALLABLE spreadAboveTreasury
1710       617446          94   0 20080204        1             1.15418
1711       617446          94   0 20080204        1             1.15418
     timeToMaturity NetInterestOverEBIT NetInterestOverEBITDA ISSUE_CUSIP
1710           1242            8.292714              7.669648          MK
1711           1242            8.292714              7.669648          MK
     treasuryYield whichTreasury MATURITY SIC_CODE   Yield minTradeDateForCusip
1710          2.23 3yearMaturity 20110630     6211 3.38418             20080204
1711          2.23 3yearMaturity 20110630     6211 3.38418             20080204
     group residuals
1710     1  -4.69206
1711     1  -4.69206
> 
> #regression for bonds that do have bond of same cusip traded in 30 day period
> coefficients <- lm(spreadAboveTreasury ~ NetInterestOverEBITDA + NetInterestOverEBIT + timeToMaturity + CALLABLE + PAR , data=data[indicesWithBondTradedOfSameCusip,])
> 
> 
> print("coefficients for indices that DO have same bond traded in 30 day period")
[1] "coefficients for indices that DO have same bond traded in 30 day period"
> 
> summary(coefficients)

Call:
lm(formula = spreadAboveTreasury ~ NetInterestOverEBITDA + NetInterestOverEBIT + 
    timeToMaturity + CALLABLE + PAR, data = data[indicesWithBondTradedOfSameCusip, 
    ])

Residuals:
    Min      1Q  Median      3Q     Max 
-4.7701 -1.3716 -0.4950  0.5302 10.4987 

Coefficients:
                        Estimate Std. Error t value Pr(>|t|)    
(Intercept)            3.382e+00  8.254e-02  40.979  < 2e-16 ***
NetInterestOverEBITDA -5.298e-02  1.279e-02  -4.142 3.57e-05 ***
NetInterestOverEBIT    7.002e-02  4.123e-03  16.983  < 2e-16 ***
timeToMaturity        -1.991e-04  1.116e-05 -17.838  < 2e-16 ***
CALLABLE1              3.152e+00  1.063e-01  29.653  < 2e-16 ***
PAR1                  -2.057e+00  1.579e-01 -13.027  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.154 on 2187 degrees of freedom
Multiple R-squared:  0.3615,	Adjusted R-squared:   0.36 
F-statistic: 247.6 on 5 and 2187 DF,  p-value: < 2.2e-16

> 
> data[indicesWithBondTradedOfSameCusip,]$residuals=coefficients$residuals
> 
> maxIndex= which(data[indicesWithBondTradedOfSameCusip,]$residuals==max(coefficients$residuals))
> minIndex= which(data[indicesWithBondTradedOfSameCusip,]$residuals==min(coefficients$residuals))
> 
> 
> 
> print(data[indicesWithBondTradedOfSameCusip,][maxIndex,])
    ISSUER_CUSIP Clean_Price PAR yyyymmdd CALLABLE spreadAboveTreasury
456       07556Q     75.8125   0 20080211        1             16.7936
457       07556Q     75.8125   0 20080211        1             16.7936
    timeToMaturity NetInterestOverEBIT NetInterestOverEBITDA ISSUE_CUSIP
456           1189          -0.1821543            -0.1872248          AE
457           1189          -0.1821543            -0.1872248          AE
    treasuryYield whichTreasury MATURITY SIC_CODE   Yield minTradeDateForCusip
456           2.1 3yearMaturity 20110515     1521 18.8936             20080204
457           2.1 3yearMaturity 20110515     1521 18.8936             20080204
    group residuals
456     0  10.49873
457     0  10.49873
> print(data[indicesWithBondTradedOfSameCusip,][minIndex,])
     ISSUER_CUSIP Clean_Price PAR yyyymmdd CALLABLE spreadAboveTreasury
1708       617446          95   0 20080220        1             1.73081
1709       617446          95   0 20080220        1             1.73081
     timeToMaturity NetInterestOverEBIT NetInterestOverEBITDA ISSUE_CUSIP
1708           1044            8.292714              7.669648          JQ
1709           1044            8.292714              7.669648          JQ
     treasuryYield whichTreasury MATURITY SIC_CODE   Yield minTradeDateForCusip
1708          2.14 2yearMaturity 20101230     6211 3.87081             20080204
1709          2.14 2yearMaturity 20101230     6211 3.87081             20080204
     group residuals
1708     0 -4.770091
1709     0 -4.770091
> 
> #getting the actual estimated spread over treasury and writing it to database
> data$estimates <- data$spreadAboveTreasury 
> data$estimates <- data$estimates + coefficients$residuals
Warning message:
In data$estimates + coefficients$residuals :
  longer object length is not a multiple of shorter object length
> 
> tblName<- "outputFromYieldEstimates"
> dbWriteTable(mydb, tblName,data, overwrite=TRUE, append=FALSE)
[1] TRUE
> dbDisconnect(mydb)
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  2.766   0.122   3.021 
